//breakpoint
$screen-sm-min: 480px;
$screen-xs-max: ($screen-sm-min - 1);
$screen-md-min: 768px;
$screen-sm-max: ($screen-md-min - 1);
$screen-lg-min: 992px;
$screen-md-max: ($screen-lg-min - 1);
$screen-xl-min: 1200px;
$screen-lg-max: ($screen-xl-min - 1);

@mixin respond-to($point) {
  @if $point == xl {
    @media (min-width: $screen-xl-min) { @content; }
  }
  @else if $point == lg {
    @media (min-width: $screen-lg-min) and (max-width: $screen-lg-max) { @content; }
  }
  @else if $point == md {
    @media (min-width: $screen-md-min) and (max-width: $screen-md-max) { @content; }
  }
  @else if $point == sm {
    @media (min-width: $screen-sm-min) and (max-width: $screen-sm-max) { @content; }
  }
  @else if $point == xs {
    @media (max-width: $screen-xs-max) { @content; }
  }
}

/*
$screen-sm-min: 768px;
$screen-md-min: 992px;
$screen-lg-min: 1200px;

@mixin respond-to($media) {
  // 小屏幕
  @if $media == sm {
    @media only screen and (max-width: $screen-sm-min) { @content; }
  }
  // 中等屏幕
  @else if $media == md {
    @media only screen and (min-width: $screen-sm-min + 1) and (max-width: $screen-md-min - 1) { @content; }
  }
  // 大屏幕
  @else if $media == lg {
    @media only screen and (min-width: $screen-md-min) { @content; }
  }
}
*/


@mixin cursorHand {
  cursor: hand;
  cursor: pointer;
}

// 元素的内边距和边框不再会增加它的宽度
@mixin boxSizing() {
  -webkit-box-sizing: border-box;
       -moz-box-sizing: border-box;
            box-sizing: border-box;
}

@mixin ellipses() {
  overflow:hidden;
  white-space:nowrap;
  text-overflow:ellipsis;
}

$light-gray: #f2f2f2;
$blue: #08f;
$red: rgb(222, 22, 22);
$green: rgb(54, 200, 24);
$gray: #959ba2;


// 动画
@mixin animaction($name, $duration: .2s, $iterationCount: 1, $delay: 0s) {
  -webkit-animation-name: $name; // 动画名称
  -webkit-animation-duration: $duration; // 动画持续时间
  -webkit-animation-iteration-count: $iterationCount; // 动画次数
  -webkit-animation-delay: $delay; // 延迟时间
}


:global{

  // 淡出
  @-webkit-keyframes fadeIn {
    0% { opacity: 0; }
    100% { opacity: 1; }
  }

  @-webkit-keyframes fadeOut {
    0% { opacity: 1; }
    100% { opacity: 0; }
  }

  @-webkit-keyframes rise {
    0% { margin-top:0px; }
    100% { margin-top:-120px; }
  }

  @-webkit-keyframes rotate {
    from { -webkit-transform:rotate(0deg); }
    to { -webkit-transform:rotate(360deg); }
  }

  @-webkit-keyframes slideToTop {
    0% { transform: translate(0%, 100%); opacity: 0; }
    100% { transform: translate(0%, 0%); opacity: 1; }
    // 0% { transform: translate(-50%, 50%); opacity: 0; }
    // 100% { transform: translate(-50%, -50%); opacity: 1; }
  }

  @-webkit-keyframes slideToBottom {
    0% { transform: translate(0%, 0%); opacity: 1; }
    100% { transform: translate(0%, 100%); opacity: 0; }
    // 0% { transform: translate3d(-50%, -50%, 0); opacity: 1; }
    // 100% { transform: translate3d(-50%, 50%, 0); opacity: 0; }
  }

}
